#include "OrderHandler.h"
#include "GetInteger.h"
#include "Line.h"
#include <iostream>
#include <iomanip>

OrderHandler::OrderHandler(ClientHandler& cltRef, ProductHandler& prodRef)
	:cltManager(cltRef), prodManager(prodRef)
{
}

void OrderHandler::ShowOrderMenu() const
{
	/*** 주문 내역 관리 메뉴 출력 ***/
	cout << LINE80 << endl;
	cout << "\t\t\t\t주문 내역 관리" << endl;
	cout << LINE80 << endl;
	cout << "\t\t\t\t1.  주문 내역 등록" << endl;
	cout << "\t\t\t\t2.  주문 내역 조회(삭제, 변경)" << endl;
	cout << "\t\t\t\t3.  처음으로" << endl;
	cout << LINE80 << endl;
}

void OrderHandler::AddOrderMenu()
{
	/*** 주문 내역 등록 메뉴 ***/
	int num;		// 주문번호
	string date;	// 주문날짜
	int cltID;		// 고객ID
	int prodID;		// 상품ID
	int prodNum;	// 주문수량

	/*** 주문 정보 입력 받기 ***/
	cout << LINE80 << endl;
	cout << "\t\t\t\t주문 내역 등록" << endl;
	cout << LINE80 << endl;

	date = GetDateString();
	cltID = GetCltID();
	prodID = GetProdID();
	cout << "주문 수량: ";
	prodNum = GetInt::GetInteger();
	num = MakeOrderNum();

	/*** 주문 정보 등록 ***/
	Order* newOrder = new Order(num, date, cltID, prodID, prodNum);
	orderList.insert({ num, newOrder });
	cout << "\n주문 내역 등록 완료!" << endl;
	cout << "주문번호는 " << num << "입니다.\n" << endl;

	cout << "메뉴로 돌아가기 (0): ";
	GetInt::GetOnlyZero();

	system("cls");
}

void OrderHandler::SearchOrderMenu()
{
	int sel;

	/*** 상품 조회 메뉴 출력 ***/
	cout << LINE80 << endl;
	cout << "\t\t\t\t주문 내역 조회(삭제, 변경)" << endl;
	cout << LINE80 << endl;
	cout << "\t\t\t\t1.  주문번호로 조회" << endl;
	cout << "\t\t\t\t2.  고객ID로 조회" << endl;
	cout << "\t\t\t\t3.  상품ID로 조회" << endl;
	cout << "\t\t\t\t4.  날짜별 조회" << endl;
	cout << "\t\t\t\t5.  전체 주문 내역 조회" << endl;
	cout << "\t\t\t\t6.  이전 메뉴" << endl;
	cout << LINE80 << endl;

	/*** 상품 조회 메뉴 선택 ***/
	cout << "메뉴를 선택하세요: ";
	sel = GetInt::GetInteger(1, 5);

	if (sel == 1)
		SearchOrderUsingNumMenu();
	else if (sel == 2)
		;//SearchOrderUsingNameMenu();
	else if (sel == 3)
		;//SearchOrderUsingClasMenu();
	else if (sel == 4)
		;//ShowAllOrderInfoMenu();
	else if (sel == 5)
		;//ShowAllOrderInfoMenu();
	else
		system("cls");
}

void OrderHandler::SearchOrderUsingNumMenu()
{
	/*** 주문번호로 검색 ***/
	int num;
	Order* order;
	cout << "주문번호를 입력하세요: ";
	num = GetInt::GetInteger();
	order = SearchOrderUsingNum(num);
	ShowSearchResult(order);

	/*** 삭제/변경 메뉴 호출 ***/
	if (order != nullptr)
		;//ProdDeleteModifyMenu(product);
	else {
		cout << "메뉴로 돌아가기 (0): ";
		GetInt::GetOnlyZero();
	}

	system("cls");
}

Order* OrderHandler::SearchOrderUsingNum(int num) const
{
	/*** 주문번호로 검색 ***/
	auto i = orderList.find(num);

	if (i != orderList.end())
		return i->second;
	else
		return nullptr;
}

void OrderHandler::ShowSearchResult(Order* order) const
{
	/*** 주문번호로 검색한 결과 출력 ***/
	system("cls");
	cout << LINE80 << endl;
	cout << "\t\t\t\t검색 결과" << endl;
	cout << LINE80 << endl;
	cout << setw(16) << left << "주문번호";
	cout << setw(14) << left << "주문날짜";
	cout << setw(30) << left << "상품ID(상품명)";
	cout << setw(12) << left << "주문수량";
	cout << setw(10) << left << "주문금액" << endl;
	cout << setw(16) << left << "고객ID(이름)";
	cout << setw(14) << left << "전화번호";
	cout << setw(30) << left << "주소" << endl;
	cout << LINE80 << endl;
	
	if (order != nullptr) {
		ShowOrderInfoRow1(order);
		ShowOrderInfoRow2(order);
		cout << endl;
	}
	else {
		cout << "\n존재하지 않는 주문번호입니다.\n" << endl;
	}
	system("pause");
}

void OrderHandler::ShowOrderInfoRow1(Order* order) const
{
	/*** 주문 정보 1행 출력 ***/

	/*** 주문번호 ***/
	cout << setw(16) << left << order->GetOrderNum();

	/*** 주문날짜 ***/
	cout << setw(14) << left << order->GetOrderDate();

	/*** 상품ID(상품명) ***/
	Product* product = prodManager.SearchProdUsingId(order->GetOrderProdID());
	if (product != nullptr) {
		cout << setw(30) << left << to_string(product->GetProdID()) + \
			'(' + product->GetProdName() + ')';
	}
	else {
		cout << setw(30) << left << "상품 정보 없음";
	}

	/*** 주문수량 ***/
	cout << setw(12) << left << order->GetOrderProdNum();

	/*** 주문금액 ***/
	if (product != nullptr) {
		cout << setw(10) << left << order->GetOrderProdNum() * product->GetProdPrice() << endl;
	}
	else {
		cout << setw(10) << left << "상품 정보 없음" << endl;
	}
}

void OrderHandler::ShowOrderInfoRow2(Order* order) const
{
	/*** 주문 정보 2행 출력 ***/

	/*** 고객ID(이름), 전화번호, 주소 ***/
	Client* client = cltManager.SearchCltUsingId(order->GetOrderCltID());
	if (client != nullptr) {
		cout << setw(16) << left << to_string(client->getCltID()) + \
			'(' + client->GetCltName() + ')';
		cout << setw(14) << left << client->GetCltPhoneNumber();
		cout << setw(30) << left << client->GetCltAddress() << endl;
	}
	else {
		cout << setw(16) << left << "고객 정보 없음";
	}
}

string OrderHandler::GetDateString()
{
	/*** string형식의 날짜 입력받기 ***/
	string strDate;	// 날짜
	int intDate;
	int day, month, year;

	cout << "주문날짜(ex 20220907): ";

	while (1) {
		intDate = GetInt::GetInteger();
		year = intDate / 10000;
		month = (intDate - (year * 10000)) / 100;
		day = intDate % 100;
		if (CheckValidDate(year, month, day)) {
			strDate = to_string(year) + '-';
				if (month < 10) strDate += '0';
				strDate += to_string(month) + '-';
				if (day < 10) strDate += '0';
				strDate += to_string(day);
				return strDate;
		}
		else
			cout << "유효하지 않은 날짜입니다. 다시 입력하세요: ";
	}
}

int OrderHandler::GetCltID()
{
	/*** 등록된 고객ID 입력받기 ***/
	int id;

	cout << "고객ID: ";
	while (1) {
		id = GetInt::GetInteger();
		if (cltManager.SearchCltUsingId(id) != nullptr)
			return id;
		else
			cout << "등록되지 않은 고객ID입니다. 다시 입력하세요 : ";		
	}
}

int OrderHandler::GetProdID()
{
	/*** 등록된 상품ID 입력받기 ***/
	int id;

	cout << "상품ID: ";
	while (1) {
		id = GetInt::GetInteger();
		if (prodManager.SearchProdUsingId(id) != nullptr)
			return id;
		else
			cout << "등록되지 않은 상품ID입니다. 다시 입력하세요: ";
	}
}

bool OrderHandler::CheckValidDate(int year, int month, int day)
{
	/*** 날짜의 유효성 검사 ***/
	/*** 년도 검사 ***/
	if (year < 1900 || year>2999) // 1900~2999년
		return false;

	/*** 월,일 검사 ***/
	if (month < 1 || month>12)  // 1~12
		return false;
	else {
		if ((month & 0x1) == 1) { // odd month
			if (month <= 7) {	// 1, 3, 5, 7
				if (day < 1 || day>31)
					return false;
			}
			else {	// 9, 11
				if (day < 1 || day>30)
					return false;
			}
		}
		else {					// even month
			if (month == 2) {	// 2
				if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0) {
					if (day < 1 || day>29)	// 윤년
						return false;
				}
				else {	// 평년
					if (day < 1 || day>28)
						return false;
				}
			}
			else if (month <= 6) {	// 4, 6
				if (day < 1 || day>30)
					return false;
			}
			else {	// 8, 10, 12
				if (day < 1 || day>31)
					return false;
			}
		}
	}

	return true;
}

int OrderHandler::MakeOrderNum()
{
	/*** 중복되지 않는 주문번호 생성 ***/
	auto key = orderList.end();
	if (orderList.size() == 0) {
		return 10001;
	}
	else {
		int num = (--key)->first;
		return ++num;
	}
}